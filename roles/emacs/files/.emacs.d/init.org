Content-Type: text/enriched
Text-Width: 70

#+TITLE: <x-color><param>#93a1a1</param>Emacs Configuration

</x-color>#+AUTHOR: <x-color><param>#839496</param>Mirco De Zorzi

</x-color>#+EMAIL: <x-color><param>#839496</param>mircodezorzi@protonmail.com

</x-color><x-color><param>#586e75</param>#+TAGS[]: emacs</x-color>


<x-color><param>#cb4b16</param>* Meta</x-color>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Enable lexical scoping for the current file.</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#586e75</param><x-bg-color><param>#00001eef26d9</param>;;; -*- lexical-binding: t -*-
</x-bg-color></x-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Enable native compilation.</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>setq</x-color> package-native-compile t<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Defer Garbage Collection</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>setq</x-color> gc-cons-threshold 100000000<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Unset </x-color><x-color><param>#859900</param>=file-name-handler-alist=</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>defvar</x-color> <x-color><param>#268bd2</param>file-name-handler-alist-original</x-color> file-name-handler-alist<x-color><param>#2aa198</param>)</x-color>
<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>setq</x-color> file-name-handler-alist nil<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Garbage Collection</x-color>

Tweak garbage collection configuration during initialization.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>defvar</x-color> <x-color><param>#268bd2</param>better-gc-cons-threshold</x-color> 402653184
  <x-color><param>#2aa198</param>"The default value to use for `<x-color><param>#268bd2</param>gc-cons-threshold</x-color>'.")</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defvar</x-color> <x-color><param>#268bd2</param>better-gc-cons-percentage</x-color> 0.6
  <x-color><param>#2aa198</param>"The default value to use for `<x-color><param>#268bd2</param>gc-cons-percentage</x-color>'.")</x-color>


<x-color><param>#2aa198</param>(</x-color>add-hook 'emacs-startup-hook
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>setq</x-color> gc-cons-threshold better-gc-cons-threshold
          gc-cons-percentage better-gc-cons-percentage
          file-name-handler-alist file-name-handler-alist-original<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>makunbound 'file-name-handler-alist-original<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

Garbage Collect when Emacs is out of focus and avoid garbage collection when using minibuffer.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param>add-hook 'emacs-startup-hook
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>if</x-color> <x-color><param>#6c71c4</param>(</x-color>boundp 'after-focus-change-function<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>add-function</x-color> <x-color><param>#839496</param>:after</x-color> after-focus-change-function
        <x-color><param>#859900</param>(lambda</x-color> <x-color><param>#b58900</param>()</x-color>
          <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>unless</x-color> <x-color><param>#268bd2</param>(</x-color>frame-focus-state<x-color><param>#268bd2</param>)</x-color>
            <x-color><param>#268bd2</param>(</x-color>garbage-collect<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color>add-hook 'after-focus-change-function 'garbage-collect<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>


    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>gc-minibuffer-setup-hook</x-color> <x-color><param>#6c71c4</param>()</x-color>
      <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>setq</x-color> gc-cons-threshold <x-color><param>#859900</param>(</x-color>* better-gc-cons-threshold 2<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>


    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>gc-minibuffer-exit-hook</x-color> <x-color><param>#6c71c4</param>()</x-color>
      <x-color><param>#6c71c4</param>(</x-color>garbage-collect<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>setq</x-color> gc-cons-threshold better-gc-cons-threshold<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>


    <x-color><param>#268bd2</param>(</x-color>add-hook 'minibuffer-setup-hook #'gc-minibuffer-setup-hook<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>add-hook 'minibuffer-exit-hook #'gc-minibuffer-exit-hook<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Literate Configuration Compilation</x-color>

Automatically update configuration file when saving the document.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>setq</x-color> user-emacs-directory <x-color><param>#2aa198</param>"~/code/dotfiles/roles/emacs/files/.emacs.d/")</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>tangle-init</x-color> <x-color><param>#b58900</param>()</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>when</x-color> <x-color><param>#268bd2</param>(</x-color>equal <x-color><param>#6c71c4</param>(</x-color>buffer-file-name<x-color><param>#6c71c4</param>)</x-color>
               <x-color><param>#6c71c4</param>(</x-color>expand-file-name <x-color><param>#859900</param>(</x-color>concat user-emacs-directory <x-color><param>#2aa198</param>"init.org"</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#586e75</param>;; Avoid running hooks when tangling.
</x-color>    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>let</x-color> <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>(</x-color>prog-mode-hook nil<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color>org-babel-tangle<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color>byte-compile-file <x-color><param>#859900</param>(</x-color>concat user-emacs-directory <x-color><param>#2aa198</param>"init.el"</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color>add-hook 'after-save-hook 'tangle-init<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Packages</x-color>

Include extra package repositories.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>setq</x-color> package-user-dir <x-color><param>#b58900</param>(</x-color>expand-file-name <x-color><param>#2aa198</param>"elpa"</x-color> user-emacs-directory<x-color><param>#b58900</param>)</x-color>
      package-archives
      '<x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"gnu"</x-color>   . <x-color><param>#2aa198</param>"https://elpa.gnu.org/packages/"</x-color><x-color><param>#268bd2</param>)</x-color>
        <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"melpa"</x-color> . <x-color><param>#2aa198</param>"https://melpa.org/packages/"</x-color><x-color><param>#268bd2</param>)</x-color>
        <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"cselpa"</x-color> . <x-color><param>#2aa198</param>"https://elpa.thecybershadow.net/packages/"</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

Configure package manager.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>unless</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>bound-and-true-p</x-color> package--initialized<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> package-enable-at-startup nil<x-color><param>#b58900</param>)</x-color> <x-color><param>#586e75</param>; To prevent initializing twice.
</x-color>  <x-color><param>#b58900</param>(</x-color>package-initialize<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>eval-and-compile</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> use-package-verbose <x-color><param>#268bd2</param>(</x-color>not <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>bound-and-true-p</x-color> byte-compile-current-file<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

Configure and install =use-package=.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#586e75</param><x-bg-color><param>#00001eef26d9</param>;; Install use-package if not installed
</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>unless</x-color> <x-color><param>#b58900</param>(</x-color>package-installed-p 'use-package<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>package-refresh-contents<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>package-install 'use-package<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>eval-and-compile</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> use-package-always-ensure t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> use-package-expand-minimally t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> use-package-enable-imenu-support t<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>eval-when-compile</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>require</x-color> '<x-color><param>#268bd2</param>use-package</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>require</x-color> '<x-color><param>#268bd2</param>bind-key</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

In case some packages are missing, install them.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>let*</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>package--builtins nil<x-color><param>#268bd2</param>)</x-color>
       <x-color><param>#268bd2</param>(</x-color>packages
        '<x-color><param>#6c71c4</param>(</x-color>auctex blacken ccls cmake-mode company company-auctex company-box company-go company-math company-posframe company-terraform company-web counsel counsel-projectile docker docker-compose-mode dockerfile-mode emmet-mode evil evil-commentary evil-surround flycheck general git-gutter git-gutter-fringe go-eldoc go-guru go-mode go-tag highlight-indent-guides ialign ivy ivy-xref key-chord linum-relative lsp-mode lsp-pyright lsp-treemacs lsp-ui magit org org-bullets origami ox-hugo ox-reveal paredit projectile protobuf-mode py-isort python-mode pyvenv rainbow-delimiters swiper terraform-mode toml-mode tree-sitter treemacs treemacs-all-the-icons treemacs-projectile typescript-mode undo-tree vterm vterm-toggle vue-mode web-mode yaml-mode yasnippet yasnippet-snippets<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>let</x-color> <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>packages <x-color><param>#859900</param>(</x-color>seq-remove 'package-installed-p packages<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>when</x-color> packages
      <x-color><param>#586e75</param>;; Install uninstalled packages.
</x-color>      <x-color><param>#6c71c4</param>(</x-color>package-refresh-contents<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color>mapc 'package-install packages<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Auto Update Packages</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> auto-package-update
  <x-color><param>#839496</param>:if</x-color> <x-color><param>#b58900</param>(</x-color>not <x-color><param>#268bd2</param>(</x-color>daemonp<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>auto-package-update-interval             7<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>auto-package-update-prompt-before-update t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>auto-package-update-delete-old-versions  t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>auto-package-update-hide-results         t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color>auto-package-update-maybe<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Diminish</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> delight<x-color><param>#2aa198</param>)</x-color> <x-color><param>#586e75</param>;; Hide minor mode symbols in modeline.
</x-color></x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* General</x-color>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Personal information</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>setq</x-color> user-full-name    <x-color><param>#2aa198</param>"Mirco De Zorzi"</x-color>
      user-mail-address <x-color><param>#2aa198</param>"mircodezorzi@protonmail.com")</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Reduce filesystem clutter</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>defvar</x-color> <x-color><param>#268bd2</param>emacs-autosave-directory</x-color>
  <x-color><param>#b58900</param>(</x-color>concat user-emacs-directory <x-color><param>#2aa198</param>"autosaves/"</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#586e75</param>;; Sets all files to be backed up and auto saved in a single directory.
</x-color><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>setq</x-color> backup-directory-alist
      `<x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>".*"</x-color> . ,emacs-autosave-directory<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
      auto-save-file-name-transforms
      `<x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>".*"</x-color> ,emacs-autosave-directory t<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#586e75</param>;; Don't generate lock files. Prevents Angular from breaking.
</x-color><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>setq</x-color> create-lockfiles nil<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Cleanup UI</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>dolist</x-color> <x-color><param>#b58900</param>(</x-color>mode
         '<x-color><param>#268bd2</param>(</x-color>menu-bar-mode
           tool-bar-mode
           tooltip-mode
           scroll-bar-mode
           blink-cursor-mode<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>funcall mode 0<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Fonts</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes
</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>dolist</x-color> <x-color><param>#b58900</param>(</x-color>face '<x-color><param>#268bd2</param>(</x-color>default fixed-pitch<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>set-face-attribute `,face nil <x-color><param>#839496</param>:font</x-color> <x-color><param>#2aa198</param>"Source Code Pro 16"</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

<x-color><param>#2aa198</param>(</x-color>set-face-attribute 'variable-pitch nil <x-color><param>#839496</param>:font</x-color> <x-color><param>#2aa198</param>"Bitter 16")</x-color>
</x-bg-color><italic>#+END_SRC
</italic>
<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Saner defaults</x-color>
<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>setq</x-color> inhibit-startup-screen    t
      initial-scratch-message   nil
      sentence-end-double-space nil
      use-dialog-box            nil
      mark-even-if-inactive     nil
      kill-whole-line           t
      case-fold-search          nil<x-color><param>#2aa198</param>)</x-color>

<x-color><param>#586e75</param>;; Set better default tab settings.
</x-color><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>setq-default</x-color> 
  indent-tabs-mode nil
  tab-width        2
  evil-shift-width 2<x-color><param>#2aa198</param>)</x-color>

<x-color><param>#2aa198</param>(</x-color>show-paren-mode t<x-color><param>#2aa198</param>)</x-color>         <x-color><param>#586e75</param>;; Show matching parenthesis.
</x-color><x-color><param>#2aa198</param>(</x-color>global-so-long-mode<x-color><param>#2aa198</param>)</x-color>       <x-color><param>#586e75</param>;; Handle long lines better.
</x-color><x-color><param>#2aa198</param>(</x-color>global-font-lock-mode 1<x-color><param>#2aa198</param>)</x-color>   <x-color><param>#586e75</param>;; Always highlight code.
</x-color><x-color><param>#2aa198</param>(</x-color>global-auto-revert-mode 1<x-color><param>#2aa198</param>)</x-color> <x-color><param>#586e75</param>;; Refresh a buffer if changed on disk.
</x-color>
<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defalias</x-color> '<x-color><param>#268bd2</param>yes-or-no-p</x-color> 'y-or-n-p<x-color><param>#2aa198</param>)</x-color> <x-color><param>#586e75</param>;; Accept 'y' in lieu of 'yes'.
</x-color></x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Mixed pitch</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> mixed-pitch
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>text-mode . mixed-pitch-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>mixed-pitch-set-height t<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Beacon</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> beacon
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color>beacon-mode 1<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>beacon-blink-when-window-changes t<x-color><param>#b58900</param>)</x-color> <x-color><param>#586e75</param>;; Only flash on window/buffer changes.
</x-color>  <x-color><param>#b58900</param>(</x-color>beacon-blink-when-window-scrolls nil<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>beacon-blink-when-point-moves    nil<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>beacon-blink-duration            .5<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>beacon-blink-delay               .5<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>beacon-size                      20<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Theme</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> solarized-theme
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>load-theme 'solarized-dark t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom-face</x-color>
  <x-color><param>#b58900</param>(</x-color>font-lock-contant-face <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>t <x-color><param>#859900</param>(</x-color><x-color><param>#839496</param>:bold</x-color> nil <x-color><param>#839496</param>:foreground</x-color> nil<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>font-lock-keyword-face <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>t <x-color><param>#859900</param>(</x-color><x-color><param>#839496</param>:bold</x-color> nil<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>mode-line              <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>t <x-color><param>#859900</param>(</x-color><x-color><param>#839496</param>:inverse-video</x-color> t <x-color><param>#839496</param>:underline</x-color> nil<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>mode-line-buffer-id    <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>t <x-color><param>#859900</param>(</x-color><x-color><param>#839496</param>:inverse-video</x-color> t <x-color><param>#839496</param>:foreground</x-color> nil<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>mode-line-inactive     <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>t <x-color><param>#859900</param>(</x-color><x-color><param>#839496</param>:inverse-video</x-color> t <x-color><param>#839496</param>:underline</x-color> nil<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Better Scrolling</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> fast-scroll
  <x-color><param>#839496</param>:hook</x-color>
  <x-color><param>#b58900</param>(</x-color>fast-scroll-start . <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#6c71c4</param>()</x-color> <x-color><param>#6c71c4</param>(</x-color>flycheck-mode -1<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>fast-scroll-end . <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#6c71c4</param>()</x-color> <x-color><param>#6c71c4</param>(</x-color>flycheck-mode 1<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color>fast-scroll-config<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>fast-scroll-mode 1<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>setq</x-color>
  mouse-wheel-scroll-amount '<x-color><param>#b58900</param>(</x-color>6 <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>shift<x-color><param>#6c71c4</param>)</x-color> . 1<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>   <x-color><param>#586e75</param>;; Mouse scroll N lines.
</x-color>  mouse-wheel-progressive-speed nil              <x-color><param>#586e75</param>;; Don't accelerate scrolling.
</x-color>  redisplay-dont-pause t                         <x-color><param>#586e75</param>;; Don't pause display on input.

</x-color>

  <x-color><param>#586e75</param>;; Always redraw immediately when scrolling, more responsive and doesn't hang!
</x-color>  fast-but-imprecise-scrolling nil
  jit-lock-defer-time          0<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Indent guides</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> highlight-indent-guides
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>prog-mode . highlight-indent-guides-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>highlight-indent-guides-method 'character<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Cursorline</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param>add-hook 'prog-mode-hook #'hl-line-mode<x-color><param>#2aa198</param>)</x-color>
<x-color><param>#2aa198</param>(</x-color>add-hook 'text-mode-hook #'hl-line-mode<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Indentation</x-color>

Stolen from [[http://blog.binchen.org/posts/easy-indentation-setup-in-emacs-for-web-development.html][binchen]]

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#586e75</param><x-bg-color><param>#00001eef26d9</param>;;;###autoload
</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/indent-setup</x-color> <x-color><param>#b58900</param>(</x-color>n<x-color><param>#b58900</param>)</x-color>

  <x-color><param>#586e75</param>;; java/c/c++
</x-color>  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq-local</x-color> c-basic-offset n<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#586e75</param>;; web development
</x-color>  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq-local</x-color> web-mode-markup-indent-offset n
              web-mode-css-indent-offset    n
              web-mode-code-indent-offset   n<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#586e75</param>;;;###autoload
</x-color><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/indent-tabs</x-color> <x-color><param>#b58900</param>()</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq-local</x-color> indent-tabs-mode t<x-color><param>#b58900</param>)</x-color> <x-color><param>#586e75</param>;; Use tab instead of space.
</x-color>  <x-color><param>#b58900</param>(</x-color>dz/indent-setup 2<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>            <x-color><param>#586e75</param>;; Indent 2 spaces width.

</x-color>

<x-color><param>#586e75</param>;;;###autoload
</x-color><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/indent-spaces</x-color> <x-color><param>#b58900</param>()</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq-local</x-color> indent-tabs-mode nil<x-color><param>#b58900</param>)</x-color> <x-color><param>#586e75</param>;; Use space instead of tab.
</x-color>  <x-color><param>#b58900</param>(</x-color>dz/indent-setup 2<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>              <x-color><param>#586e75</param>;; Indent 2 spaces width.
</x-color></x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Origami</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> origami
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>origami-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* ialign</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> ialign
  <x-color><param>#839496</param>:defer</x-color> 3<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Relative line numbers</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> linum-relative
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>prog-mode . display-line-numbers-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>linum-relative-backend 'display-line-numbers-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>linum-relative-current-symbol <x-color><param>#2aa198</param>""</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Key chords</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> key-chord
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color>key-chord-mode 1<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>key-chord-define-global <x-color><param>#2aa198</param>"eu"</x-color> 'evil-normal-state<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color> 
  <x-color><param>#b58900</param>(</x-color>key-chord-two-keys-delay 0.05<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Tools</x-color>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Terminal Emulator</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>@dz/vterm-init</x-color> <x-color><param>#b58900</param>()</x-color> 
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> mode-line-format       nil
        confirm-kill-processes nil
        hscroll-margin         0<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/open-term</x-color> <x-color><param>#b58900</param>()</x-color> 
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>split-window-vertically<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>vterm-toggle<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> vterm
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:preface</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> vterm-install t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:commands</x-color> vterm vterm-mode
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>vterm-mode . @dz/vterm-init<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color>  

  <x-color><param>#586e75</param>;; Once vterm is dead, the vterm buffer is useless.
</x-color>  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> vterm-kill-buffer-on-exit t<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>+vterm-goto-insert-point-h</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#2aa198</param>"Go to the point we were at when we left insert mode."</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>when</x-color> +vterm--insert-point
      <x-color><param>#6c71c4</param>(</x-color>goto-char +vterm--insert-point<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>setq-local</x-color> +vterm--insert-point nil<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>+vterm-remember-insert-point-h</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#2aa198</param>"Remember point when leaving insert mode."</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>setq-local</x-color> +vterm--insert-point <x-color><param>#6c71c4</param>(</x-color>point<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#586e75</param>;; Restore the point's location when leaving and re-entering insert mode.
</x-color>  <x-color><param>#b58900</param>(</x-color>add-hook 'vterm-mode-hook
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>+vterm-init-remember-point-h</x-color> <x-color><param>#6c71c4</param>()</x-color>
      <x-color><param>#6c71c4</param>(</x-color>add-hook 'evil-insert-state-exit-hook #'+vterm-remember-insert-point-h nil t<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color>add-hook 'evil-insert-state-entry-hook #'+vterm-goto-insert-point-h nil t<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> vterm-toggle
  <x-color><param>#839496</param>:after</x-color> vterm
  <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"C-c t"</x-color> . #'vterm-toggle<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Undo Tree</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> undo-tree
  <x-color><param>#839496</param>:after</x-color> evil
  <x-color><param>#839496</param>:diminish</x-color> undo-tree-mode
  <x-color><param>#839496</param>:preface</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>require</x-color> '<x-color><param>#268bd2</param>bind-key</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:init</x-color> <x-color><param>#b58900</param>(</x-color>global-undo-tree-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>evil-set-undo-system 'undo-tree<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>undo-tree-visualizer-diff t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>undo-tree-visualizer-timestamps t<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Magit</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> magit
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> evil-normal-state-map
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"SPC C-c"</x-color> . magit-dispatch<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Git Gutter</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> git-gutter
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:config</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>use-package</x-color> git-gutter-fringe
    <x-color><param>#839496</param>:config</x-color>
    <x-color><param>#586e75</param>;; Subtle diff indicators in the fringe places the git gutter outside the margins.
</x-color>    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>setq-default</x-color> fringes-outside-margins t<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#586e75</param>;; Thin fringe bitmaps.
</x-color>    <x-color><param>#268bd2</param>(</x-color>define-fringe-bitmap 'git-gutter-fr:added
      <x-color><param>#6c71c4</param>[</x-color>224 224 224 224 224
       224 224 224 224 224
       224 224 224 224 224
       224 224 224 224 224
       224 224 224 224 224<x-color><param>#6c71c4</param>]</x-color> nil nil 'center<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>define-fringe-bitmap 'git-gutter-fr:modified
      <x-color><param>#6c71c4</param>[</x-color>224 224 224 224 224
       224 224 224 224 224
       224 224 224 224 224
       224 224 224 224 224
       224 224 224 224 224<x-color><param>#6c71c4</param>]</x-color> nil nil 'center<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>define-fringe-bitmap 'git-gutter-fr:deleted
      <x-color><param>#6c71c4</param>[</x-color>0 0 0 0 0 0 0 0 0 0 0 0 0 128 192 224 240 248<x-color><param>#6c71c4</param>]</x-color> nil nil 'center<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>global-git-gutter-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Ivy</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-bg-color><param>#00001eef26d9</param>  <x-color><param>#586e75</param>;;;###autoload
</x-color>  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/find-file</x-color> <x-color><param>#b58900</param>()</x-color>
    <x-color><param>#2aa198</param>"Call `<x-color><param>#268bd2</param>counsel-projectile-find-file</x-color>' if `<x-color><param>#268bd2</param>projectile-project-p</x-color>', otherwise fallback to `<x-color><param>#268bd2</param>counsel-find-files</x-color>'."</x-color>
    <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>if</x-color> <x-color><param>#268bd2</param>(</x-color>projectile-project-p<x-color><param>#268bd2</param>)</x-color>
        <x-color><param>#268bd2</param>(</x-color>counsel-projectile-find-file<x-color><param>#268bd2</param>)</x-color>
        <x-color><param>#268bd2</param>(</x-color>counsel-find-file<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> ivy
    <x-color><param>#839496</param>:init</x-color> <x-color><param>#b58900</param>(</x-color>ivy-mode 1<x-color><param>#b58900</param>)</x-color>

    <x-color><param>#839496</param>:custom</x-color> 
    <x-color><param>#b58900</param>(</x-color>enable-recursive-minibuffers t<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>ivy-count-format <x-color><param>#2aa198</param>"[%d/%d] "</x-color><x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>ivy-initial-inputs-alist nil<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>ivy-use-virtual-buffers t<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>ivy-height 10<x-color><param>#b58900</param>)</x-color>

    <x-color><param>#839496</param>:config</x-color>
    <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>find-file-right</x-color> <x-color><param>#268bd2</param>(</x-color>filename<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color>split-window-right<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color>other-window 1<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color>find-file filename<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>

    <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>find-file-below</x-color> <x-color><param>#268bd2</param>(</x-color>filename<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color>split-window-below<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color>other-window 1<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color>find-file filename<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>

    <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>dolist</x-color> <x-color><param>#268bd2</param>(</x-color>command '<x-color><param>#6c71c4</param>(</x-color>counsel-projectile-find-file
                       counsel-find-file<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#268bd2</param>(</x-color>ivy-set-actions command
      '<x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>(</x-color><x-color><param>#2aa198</param>"|"</x-color> find-file-right <x-color><param>#2aa198</param>"open right"</x-color><x-color><param>#859900</param>)</x-color>
        <x-color><param>#859900</param>(</x-color><x-color><param>#2aa198</param>"%"</x-color> find-file-below <x-color><param>#2aa198</param>"open below"</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>

    <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> ivy-minibuffer-map
           <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"C-h"</x-color> . ivy-next-line<x-color><param>#268bd2</param>)</x-color>
           <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"C-t"</x-color> . ivy-previous-line<x-color><param>#268bd2</param>)</x-color>
           <x-color><param>#839496</param>:map</x-color> ivy-mode-map
           <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"C-c"</x-color> . ivy-dispatching-done<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> ivy-xref
    <x-color><param>#839496</param>:after</x-color> ivy
    <x-color><param>#839496</param>:custom</x-color>
    <x-color><param>#b58900</param>(</x-color>xref-show-definitions-function #'ivy-xref-show-defs<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>xref-show-xrefs-function #'ivy-xref-show-xrefs<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> swiper
    <x-color><param>#839496</param>:after</x-color> ivy
    <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> evil-normal-state-map
            <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"SPC s"</x-color> . swiper-isearch<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> counsel
    <x-color><param>#839496</param>:after</x-color> ivy evil
    <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>counsel-mode<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> evil-normal-state-map
            <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"SPC SPC"</x-color> . counsel-M-x<x-color><param>#268bd2</param>)</x-color>
            <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"SPC C-p"</x-color> . counsel-projectile-switch-project<x-color><param>#268bd2</param>)</x-color>
            <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"C-p"</x-color> . dz/find-file<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> projectile
    <x-color><param>#839496</param>:after</x-color> ivy
    <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>projectile-mode<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#839496</param>:custom</x-color>
    <x-color><param>#b58900</param>(</x-color>projectile-enable-caching t<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>projectile-completion-system 'ivy<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> counsel-projectile
    <x-color><param>#839496</param>:after</x-color> counsel projectile<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Treesitter</x-color>

<italic>#+BEGIN_SRC emacs-lisp

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> tree-sitter
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>require</x-color> '<x-color><param>#268bd2</param>tree-sitter-langs</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>global-tree-sitter-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>add-hook 'tree-sitter-after-on-hook #'tree-sitter-hl-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Treemacs</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> treemacs
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>treemacs-width 20<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>treemacs-indentation 2<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>treemacs-follow-after-init t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>treemacs-git-integration t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>treemacs-show-hidden-files t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color>treemacs-follow-mode t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>treemacs-filewatch-mode t<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> treemacs-projectile
  <x-color><param>#839496</param>:after</x-color> treemacs projectile evil
  <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> evil-normal-state-map
         <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"C-c o t"</x-color> . treemacs-projectile<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> lsp-treemacs
  <x-color><param>#839496</param>:after</x-color> treemacs
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>lsp-treemacs-sync-mode 1<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> treemacs-all-the-icons
  <x-color><param>#839496</param>:after</x-color> treemacs
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>treemacs-load-theme 'all-the-icons<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Evil Mode</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> general
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>general-override-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> evil
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>evil-search-module                     'evil-search<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>evil-ex-complete-emacs-commands        nil<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>evil-shift-round                       nil<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>evil-vsplit-window-right               t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>evil-split-window-below                t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>evil-want-C-u-scroll                   t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>popup-use-optimized-column-computation nil<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color>evil-mode<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/evil-visual-shift-left</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#2aa198</param>"Shift visual selection left, retains the selection."</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>evil-shift-left <x-color><param>#6c71c4</param>(</x-color>region-beginning<x-color><param>#6c71c4</param>)</x-color> <x-color><param>#6c71c4</param>(</x-color>region-end<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>funcall <x-color><param>#6c71c4</param>(</x-color>evil-visual-restore<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/evil-visual-shift-right</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#2aa198</param>"Shift visual selection left, retains the selection."</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>evil-shift-right <x-color><param>#6c71c4</param>(</x-color>region-beginning<x-color><param>#6c71c4</param>)</x-color> <x-color><param>#6c71c4</param>(</x-color>region-end<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>funcall <x-color><param>#6c71c4</param>(</x-color>evil-visual-restore<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>general-define-key
    <x-color><param>#839496</param>:states</x-color> '<x-color><param>#268bd2</param>(</x-color>insert<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#2aa198</param>"TAB"</x-color> 'tab-to-tab-stop<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>general-define-key

    <x-color><param>#839496</param>:states</x-color> '<x-color><param>#268bd2</param>(</x-color>visual<x-color><param>#268bd2</param>)</x-color> 
      <x-color><param>#2aa198</param>"<<"</x-color> #'dz/evil-visual-shift-left
      <x-color><param>#2aa198</param>">"</x-color> #'dz/evil-visual-shift-right<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>general-define-key
    <x-color><param>#839496</param>:states</x-color> '<x-color><param>#268bd2</param>(</x-color>normal visual motion<x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#2aa198</param>"d"</x-color> #'evil-backward-char
      <x-color><param>#2aa198</param>"n"</x-color> #'evil-forward-char
      <x-color><param>#2aa198</param>"h"</x-color> #'evil-next-line
      <x-color><param>#2aa198</param>"t"</x-color> #'evil-previous-line


      <x-color><param>#2aa198</param>"s"</x-color> #'evil-ex


      <x-color><param>#2aa198</param>"j"</x-color> #'evil-delete
      <x-color><param>#2aa198</param>"k"</x-color> #'evil-find-char-to


      <x-color><param>#2aa198</param>"l"</x-color> #'evil-search-next
      <x-color><param>#2aa198</param>"L"</x-color> #'evil-search-previous


      <x-color><param>#2aa198</param>"D"</x-color> #'evil-beginning-of-line
      <x-color><param>#2aa198</param>"N"</x-color> #'evil-end-of-line
      <x-color><param>#2aa198</param>"H"</x-color> <x-color><param>#268bd2</param>(</x-color>kbd <x-color><param>#2aa198</param>"5h"</x-color><x-color><param>#268bd2</param>)</x-color>
      <x-color><param>#2aa198</param>"T"</x-color> <x-color><param>#268bd2</param>(</x-color>kbd <x-color><param>#2aa198</param>"5t"</x-color><x-color><param>#268bd2</param>)</x-color>


      <x-color><param>#2aa198</param>"C-d"</x-color> #'evil-window-left
      <x-color><param>#2aa198</param>"C-h"</x-color> #'evil-window-down
      <x-color><param>#2aa198</param>"C-t"</x-color> #'evil-window-up
      <x-color><param>#2aa198</param>"C-n"</x-color> #'evil-window-right<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> evil-commentary
  <x-color><param>#839496</param>:after</x-color> evil
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>evil-commentary-mode 1<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> evil-surround
  <x-color><param>#839496</param>:after</x-color> evil
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>global-evil-surround-mode 1<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Language Server</x-color>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* lsp-mode</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-bg-color><param>#00001eef26d9</param>  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> lsp-mode
    <x-color><param>#839496</param>:defer</x-color> 3
    <x-color><param>#839496</param>:commands</x-color> lsp
    <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>typescript-mode javascript-mode vue-mode c++-mode c-mode latex-mode python-mode<x-color><param>#268bd2</param>)</x-color> . lsp-deferred<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> evil-normal-state-map
            <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"g r"</x-color> . lsp-find-references<x-color><param>#268bd2</param>)</x-color>
            <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"g d"</x-color> . lsp-find-definition<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
    <x-color><param>#839496</param>:custom</x-color>
    <x-color><param>#586e75</param>;; disable breadcrumbs
</x-color>    <x-color><param>#b58900</param>(</x-color>lsp-headerline-breadcrumb-enable nil<x-color><param>#b58900</param>)</x-color>

    <x-color><param>#586e75</param>;; vue related configuration
</x-color>    <x-color><param>#b58900</param>(</x-color>lsp-vetur-format-default-formatter-css <x-color><param>#2aa198</param>"none"</x-color><x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-vetur-format-default-formatter-html <x-color><param>#2aa198</param>"none"</x-color><x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-vetur-format-default-formatter-js <x-color><param>#2aa198</param>"none"</x-color><x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-vetur-validation-template nil<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>

  <x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> lsp-ui
    <x-color><param>#839496</param>:after</x-color> lsp-mode
    <x-color><param>#839496</param>:commands</x-color> lsp-ui-mode
    <x-color><param>#839496</param>:custom</x-color> 
    <x-color><param>#b58900</param>(</x-color>lsp-signature-auto-activate nil<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-signature-render-documentation nil<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-eldoc-enable-hover nil<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-ui-doc-enable t<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-ui-doc-position 'at-point<x-color><param>#b58900</param>)</x-color>
    <x-color><param>#b58900</param>(</x-color>lsp-ui-doc-border <x-color><param>#2aa198</param>"white"</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Auto Complete</x-color>

To fix the alignment issues caused by =mixed-pitch-mode= in non-prog buffers we must use this package.

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> company
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>company-idle-delay 0<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>company-echo-delay 0<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>company-minimum-prefix-length 1<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>company-tooltip-align-annotations t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color>global-company-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> company-posframe
  <x-color><param>#839496</param>:delight</x-color>
  <x-color><param>#839496</param>:after</x-color> company
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>company-posframe-mode 1<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> company-box
  <x-color><param>#839496</param>:delight</x-color>
  <x-color><param>#839496</param>:after</x-color> company
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>company-mode . company-box-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Languages</x-color>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Emacs Lisp</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> ielm
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:commands</x-color> ielm<x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> paredit
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>lisp-mode emacs-lisp-mode ielm-mode<x-color><param>#268bd2</param>)</x-color> . paredit-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> rainbow-delimiters
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>lisp-mode emacs-lisp-mode ielm-mode<x-color><param>#268bd2</param>)</x-color> . rainbow-delimiters-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* C++</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> ccls
  <x-color><param>#839496</param>:defer</x-color> 3<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Python</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> python-mode
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>python-shell-interpreter <x-color><param>#2aa198</param>"python3"</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>python-mode . lsp-deferred<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>python-mode . <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#859900</param>()</x-color> 
          <x-color><param>#859900</param>(setq</x-color> tab-width        <x-color><param>#b58900</param>(</x-color>py-guess-indent-offset<x-color><param>#b58900</param>)</x-color>
                evil-shift-width <x-color><param>#b58900</param>(</x-color>py-guess-indent-offset<x-color><param>#b58900</param>)</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> lsp-pyright
  <x-color><param>#839496</param>:after</x-color> python-mode
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>python-mode . lsp-deferred<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> pyvenv
  <x-color><param>#839496</param>:after</x-color> python-mode
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>pyvenv-mode 1<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> py-isort
  <x-color><param>#839496</param>:after</x-color> python-mode
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>python-mode . pyvenv-mode<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>before-save . py-isort-before-save<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> blacken
  <x-color><param>#839496</param>:after</x-color> python-mode
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>python-mode . blacken-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>blacken-line-length 79<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Golang</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> go-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#2aa198</param>"\\.go\\'"</x-color>
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>go-mode     . lsp-deferred<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>before-save . lsp-format-buffer<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>before-save . lsp-organize-imports<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> company-go
  <x-color><param>#839496</param>:after</x-color> company go-mode
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>company-go-show-annotation t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/go-mode-hook</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#268bd2</param>(</x-color>set <x-color><param>#6c71c4</param>(</x-color>make-local-variable 'company-backends<x-color><param>#6c71c4</param>)</x-color>
      '<x-color><param>#6c71c4</param>(</x-color>company-go<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>go-mode . dz/go-mode-hook<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> go-eldoc
  <x-color><param>#839496</param>:after</x-color> go-mode
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>go-mode . go-eldoc-setup<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> go-guru 
  <x-color><param>#839496</param>:after</x-color> go-mode
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>go-mode . go-guru-hl-identifier-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> go-tag
  <x-color><param>#839496</param>:after</x-color> go-mode
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>go-tag-args <x-color><param>#268bd2</param>(</x-color>list <x-color><param>#2aa198</param>"-transform"</x-color> <x-color><param>#2aa198</param>"camelcase"</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Javascript/Typescript</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> typescript-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#2aa198</param>"\\.js\\'"</x-color> <x-color><param>#2aa198</param>"\\.jsx\\'"</x-color> <x-color><param>#2aa198</param>"\\.ts\\'"</x-color> <x-color><param>#2aa198</param>"\\.tsx\\'"</x-color>
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>typescript-mode . lsp-deferred<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>typescript-indent-level 2<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Web</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> web-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\.html\\'"</x-color> <x-color><param>#2aa198</param>"\\.css\\'"</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>web-mode-enable-current-element-highlight t<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:config</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>use-package</x-color> company-web<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>use-package</x-color> css-mode<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/web-mode-hook</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#2aa198</param>"Hooks for Web mode."</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>setq</x-color> web-mode-markup-indent-offset 2
          web-mode-code-indent-offset   2
          web-mode-css-indent-offset    2<x-color><param>#268bd2</param>)</x-color>


    <x-color><param>#268bd2</param>(</x-color>set <x-color><param>#6c71c4</param>(</x-color>make-local-variable 'company-backends<x-color><param>#6c71c4</param>)</x-color>
      '<x-color><param>#6c71c4</param>(</x-color>company-css
        company-web-html
        company-yasnippet
        company-files<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>web-mode . prog-mode<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>web-mode . dz/web-mode-hook<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>web-mode . company-mode<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>**</x-color><x-color><param>#268bd2</param>* Emmet</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> emmet-mode
  <x-color><param>#839496</param>:preface</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defvar</x-color> <x-color><param>#268bd2</param>emmet-mode-keymap</x-color> <x-color><param>#268bd2</param>(</x-color>make-sparse-keymap<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> emmet-mode-keymap
          <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"C-TAB"</x-color> . emmet-expand-line<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>css-mode web-mode html-mode<x-color><param>#268bd2</param>)</x-color> . emmet-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Vue</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> vue-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#2aa198</param>"\\.vue\\'"</x-color>
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>vue-mode . prettier-js-mode<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>vue-mode . lsp<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>vue-mode . <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#859900</param>()</x-color> <x-color><param>#859900</param>(</x-color>set-face-background 'mmm-default-submode-face nil<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> prettier-js-args '<x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"--parser vue"</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Org</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> org
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:config</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>require</x-color> '<x-color><param>#268bd2</param>ox</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>require</x-color> '<x-color><param>#268bd2</param>color</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> org-directory <x-color><param>#2aa198</param>"~/org"</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#586e75</param>;; Mark done tasks with current time.
</x-color>  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> org-log-done 'time<x-color><param>#b58900</param>)</x-color> 
  <x-color><param>#586e75</param>;; Disable annoying indentation behaviour.
</x-color>  <x-color><param>#b58900</param>(</x-color>add-hook 'org-mode-hook <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#6c71c4</param>()</x-color> <x-color><param>#6c71c4</param>(</x-color>electric-indent-local-mode -1<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> org-format-latex-options <x-color><param>#268bd2</param>(</x-color>plist-put org-format-latex-options <x-color><param>#839496</param>:scale</x-color> 2.0<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>+org-update-latex-preview-background-color</x-color> <x-color><param>#268bd2</param>(</x-color><x-color><param>#b58900</param>&rest</x-color> _<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>setq-default</x-color>
     org-format-latex-options
     <x-color><param>#6c71c4</param>(</x-color>plist-put org-format-latex-options
                <x-color><param>#839496</param>:background</x-color>
                <x-color><param>#859900</param>(</x-color>face-attribute <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>or</x-color> <x-color><param>#268bd2</param>(</x-color>cadr <x-color><param>#6c71c4</param>(</x-color>assq 'default face-remapping-alist<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
                                    'default<x-color><param>#b58900</param>)</x-color>
                                <x-color><param>#839496</param>:background</x-color> nil t<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>advice-add 'load-theme <x-color><param>#839496</param>:after</x-color> '+org-update-latex-preview-background-color<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>setq</x-color> org-latex-listings 'minted
        org-latex-packages-alist '<x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color><x-color><param>#2aa198</param>""</x-color> <x-color><param>#2aa198</param>"minted"</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
        org-latex-pdf-process
        '<x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"</x-color>
          <x-color><param>#2aa198</param>"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>

 

  <x-color><param>#586e75</param>;; Use mixed pitch font for headers.
</x-color>  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>dolist</x-color> <x-color><param>#268bd2</param>(</x-color>face '<x-color><param>#6c71c4</param>(</x-color>org-level-1 org-level-2 org-level-3 org-level-4
                  org-level-5 org-level-6 org-level-7 org-level-8<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>set-face-attribute face nil <x-color><param>#839496</param>:inherit</x-color> 'mixed-pitch<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/org-faces</x-color> <x-color><param>#268bd2</param>()</x-color>
    <x-color><param>#268bd2</param>(</x-color>set-face-attribute 'org-block-begin-line nil <x-color><param>#839496</param>:slant</x-color> 'italic<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>set-face-attribute 'org-block-end-line nil <x-color><param>#839496</param>:slant</x-color> 'italic<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>set-face-attribute 'org-block nil <x-color><param>#839496</param>:background</x-color>
                        <x-color><param>#6c71c4</param>(</x-color>color-darken-name
                          <x-color><param>#859900</param>(</x-color>face-attribute 'default <x-color><param>#839496</param>:background</x-color><x-color><param>#859900</param>)</x-color> 3<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> evil-normal-state-map
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"C-c C-e"</x-color> . org-export-dispatch<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#268bd2</param>(</x-color>org-mode . org-indent-mode<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>org-mode . flyspell-mode<x-color><param>#268bd2</param>)</x-color>
         <x-color><param>#268bd2</param>(</x-color>org-mode . dz/org-faces<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> org-bullets
  <x-color><param>#839496</param>:after</x-color> org
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>org-mode . org-bullets-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Org Export</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> ox-hugo 
  <x-color><param>#839496</param>:after</x-color> ox<x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> ox-reveal 
  <x-color><param>#839496</param>:after</x-color> ox<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* LaTeX</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> auctex
  <x-color><param>#839496</param>:mode</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\.tex\\'"</x-color> . latex-mode<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:custom</x-color>
	<x-color><param>#b58900</param>(</x-color>TeX-save-query                    nil<x-color><param>#b58900</param>)</x-color>
	<x-color><param>#b58900</param>(</x-color>TeX-source-correlate-method       'synctex<x-color><param>#b58900</param>)</x-color>
	<x-color><param>#b58900</param>(</x-color>TeX-source-correlate-mode         t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>TeX-PDF-mode                      t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>TeX-source-correlate-start-server t<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>TeX-view-program-selection        '<x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>output-pdf <x-color><param>#2aa198</param>"PDF Tools"</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#839496</param>:config</x-color>


  <x-color><param>#b58900</param>(</x-color>add-hook 'latex-mode-hook 'TeX-fold-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>add-hook 'latex-mode-hook 'latex-math-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>add-hook 'LaTeX-mode-hook 'prettify-symbols-mode<x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>add-hook 'latex-mode-hook <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#6c71c4</param>()</x-color>
    <x-color><param>#6c71c4</param>(</x-color>add-to-list 'org-latex-classes
                 '<x-color><param>#859900</param>(</x-color><x-color><param>#2aa198</param>"notes"</x-color>
                   <x-color><param>#2aa198</param>"\\documentclass{notes}"</x-color>
                   <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\section{%s}"</x-color> . <x-color><param>#2aa198</param>"\\section*{%s}"</x-color><x-color><param>#b58900</param>)</x-color>
                   <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\subsection{%s}"</x-color> . <x-color><param>#2aa198</param>"\\subsection*{%s}"</x-color><x-color><param>#b58900</param>)</x-color>
                   <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\subsubsection{%s}"</x-color> . <x-color><param>#2aa198</param>"\\subsubsection*{%s}"</x-color><x-color><param>#b58900</param>)</x-color>
                   <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\paragraph{%s}"</x-color> . <x-color><param>#2aa198</param>"\\paragraph*{%s}"</x-color><x-color><param>#b58900</param>)</x-color>
                   <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\subparagraph{%s}"</x-color> . <x-color><param>#2aa198</param>"\\subparagraph*{%s}"</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>add-to-list 'auto-mode-alist '<x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"\\.pdf\\'"</x-color> . pdf-tools-install<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#b58900</param>(</x-color>add-hook 'pdf-view-mode-hook
            <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>lambda</x-color> <x-color><param>#6c71c4</param>()</x-color> <x-color><param>#6c71c4</param>(</x-color><x-color><param>#859900</param>setq</x-color> header-line-format nil<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>


  <x-color><param>#586e75</param>;; Update PDF buffers after successful LaTeX runs.
</x-color>  <x-color><param>#b58900</param>(</x-color>add-hook 'TeX-after-compilation-finished-functions
             #'TeX-revert-document-buffer<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> company-auctex 
  <x-color><param>#839496</param>:after</x-color> company tex<x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> company-math 
  <x-color><param>#839496</param>:after</x-color> company tex<x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> reftex
  <x-color><param>#839496</param>:after</x-color> tex
  <x-color><param>#839496</param>:commands</x-color> turn-on-reftex
  <x-color><param>#839496</param>:custom</x-color>
  <x-color><param>#b58900</param>(</x-color>reftex-plug-into-AUCTeX t<x-color><param>#b58900</param>)</x-color>
	<x-color><param>#586e75</param>;; RefTeX list of sections, labels and figures shows as vertical bar to the left of the window.
</x-color>	<x-color><param>#b58900</param>(</x-color>reftex-toc-split-windows-horizontally t<x-color><param>#b58900</param>)</x-color>
	<x-color><param>#586e75</param>;; RefTeX table of contents does not indicate which sections are in which files.
</x-color>	<x-color><param>#b58900</param>(</x-color>reftex-toc-include-file-boundaries nil<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Configuration Files</x-color>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Terraform</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> terraform-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\.tf$"</x-color> . terraform-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> company-terraform
  <x-color><param>#839496</param>:after</x-color> company-mode
  <x-color><param>#839496</param>:config</x-color> <x-color><param>#b58900</param>(</x-color>company-terraform-init<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Yaml</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> yaml-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\.yml$"</x-color> . yaml-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Protobuf</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> protobuf-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\.pb$"</x-color> . protobuf-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* CMake</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> cmake-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"CMakeLists\\.txt\\'"</x-color> . cmake-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Dockerfile</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> dockerfile-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"Dockerfile"</x-color> . dockerfile-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> docker-compose-mode<x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> docker
  <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"C-c d"</x-color> . docker<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Toml</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> toml-mode
  <x-color><param>#839496</param>:mode</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#2aa198</param>"\\.toml$"</x-color> . toml-mode<x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Spelling</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> flycheck
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:init</x-color> <x-color><param>#b58900</param>(</x-color>global-flycheck-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>flycheck-global-modes '<x-color><param>#268bd2</param>(</x-color>not org-mode<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Snippets</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>use-package</x-color> yasnippet
  <x-color><param>#839496</param>:defer</x-color> 3
  <x-color><param>#839496</param>:hook</x-color> <x-color><param>#b58900</param>(</x-color>after-init . yas-global-mode<x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:bind</x-color> <x-color><param>#b58900</param>(</x-color><x-color><param>#839496</param>:map</x-color> yas-minor-mode-map
          <x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"TAB"</x-color> . yas-expand<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>yas-prompt-functions '<x-color><param>#268bd2</param>(</x-color>yas-completing-prompt<x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>use-package</x-color> yasnippet-snippets
  <x-color><param>#839496</param>:after</x-color> yasnippet
  <x-color><param>#839496</param>:custom</x-color> <x-color><param>#b58900</param>(</x-color>yas-snippet-dirs '<x-color><param>#268bd2</param>(</x-color><x-color><param>#2aa198</param>"~/.emacs.d/snippets"</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#cb4b16</param>* Miscellaneous functions</x-color>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Open configuration</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#586e75</param><x-bg-color><param>#00001eef26d9</param>;;;###autoload
</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/open-config</x-color> <x-color><param>#b58900</param>()</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color>find-file <x-color><param>#2aa198</param>"~/.emacs.d/init.org"</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color>define-key evil-normal-state-map <x-color><param>#b58900</param>(</x-color>kbd <x-color><param>#2aa198</param>"SPC o c"</x-color><x-color><param>#b58900</param>)</x-color> #'dz/open-config<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>

<x-color><param>#002b36</param>*</x-color><x-color><param>#859900</param>* Wrap org source code blocks</x-color>

<italic>#+BEGIN_SRC emacs-lisp :tangle yes

</italic><x-color><param>#2aa198</param><x-bg-color><param>#00001eef26d9</param>(</x-bg-color></x-color><x-bg-color><param>#00001eef26d9</param><x-color><param>#859900</param>defvar</x-color> <x-color><param>#268bd2</param>def-language</x-color> nil<x-color><param>#2aa198</param>)</x-color>
<x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>setq</x-color> def-language <x-color><param>#2aa198</param>"")</x-color>


<x-color><param>#586e75</param>;;;###autoload
</x-color><x-color><param>#2aa198</param>(</x-color><x-color><param>#859900</param>defun</x-color> <x-color><param>#268bd2</param>dz/org-wrap-source</x-color> <x-color><param>#b58900</param>()</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>interactive</x-color><x-color><param>#b58900</param>)</x-color>
  <x-color><param>#b58900</param>(</x-color><x-color><param>#859900</param>let</x-color> <x-color><param>#268bd2</param>(</x-color><x-color><param>#6c71c4</param>(</x-color>lang <x-color><param>#859900</param>(</x-color>read-string <x-color><param>#b58900</param>(</x-color>format <x-color><param>#2aa198</param>"Language [%s]: "</x-color> def-language<x-color><param>#b58900</param>)</x-color> nil nil def-language<x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color>
        <x-color><param>#6c71c4</param>(</x-color>start <x-color><param>#859900</param>(</x-color>min <x-color><param>#b58900</param>(</x-color>point<x-color><param>#b58900</param>)</x-color> <x-color><param>#b58900</param>(</x-color>mark<x-color><param>#b58900</param>)</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color>
        <x-color><param>#6c71c4</param>(</x-color>end <x-color><param>#859900</param>(</x-color>max <x-color><param>#b58900</param>(</x-color>point<x-color><param>#b58900</param>)</x-color> <x-color><param>#b58900</param>(</x-color>mark<x-color><param>#b58900</param>)</x-color><x-color><param>#859900</param>)</x-color><x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>goto-char end<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>unless</x-color> <x-color><param>#6c71c4</param>(</x-color>bolp<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color>newline<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>insert <x-color><param>#2aa198</param>"#+END_SRC\n"</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>goto-char start<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>unless</x-color> <x-color><param>#6c71c4</param>(</x-color>bolp<x-color><param>#6c71c4</param>)</x-color>
      <x-color><param>#6c71c4</param>(</x-color>newline<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color><x-color><param>#859900</param>setq</x-color> def-language lang<x-color><param>#268bd2</param>)</x-color>
    <x-color><param>#268bd2</param>(</x-color>insert <x-color><param>#6c71c4</param>(</x-color>format <x-color><param>#2aa198</param>"#+BEGIN_SRC %s\n"</x-color> def-language<x-color><param>#6c71c4</param>)</x-color><x-color><param>#268bd2</param>)</x-color><x-color><param>#b58900</param>)</x-color><x-color><param>#2aa198</param>)</x-color>


<x-color><param>#2aa198</param>(</x-color>define-key evil-visual-state-map <x-color><param>#b58900</param>(</x-color>kbd <x-color><param>#2aa198</param>"SPC w"</x-color><x-color><param>#b58900</param>)</x-color> #'dz/org-wrap-source<x-color><param>#2aa198</param>)</x-color>
</x-bg-color><italic>#+END_SRC

</italic>